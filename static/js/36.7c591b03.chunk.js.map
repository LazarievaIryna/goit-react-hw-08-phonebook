{"version":3,"file":"static/js/36.7c591b03.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Error/Error.js","components/Filter/Filter.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  height: 180px;\n  width: 290px;\n  align-items: center;\n  border: 2px solid black;\n  padding: 10px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  margin-bottom: 10px;\n`;\nexport const Input = styled.input`\n  padding: 5px;\n  margin-top: 10px;\n  width: fit-content;\n  border: 1px solid grey;\n`;\nexport const BtnAdd = styled.button`\n  font-size: 12px;\n  width: fit-content;\n  height: auto;\n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 4px;\n  padding: 3px;\n  :hover {\n    background-color: blue;\n  }\n`;","import { createSelector } from \"@reduxjs/toolkit\";\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n      let normalizedFilter = filter.toLowerCase();\n     \n      const visibleContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n      return visibleContacts;\n      \n    \n    \n    }\n  );\n  ","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Label, Input, BtnAdd } from './ContactForm.styled';\nimport {selectContacts} from '../../redux/contacts/selectors'\nimport { addContact } from '../../redux/contacts/operations';\n\n\n\nexport const ContactForm=()=>{\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit=event=>{\n    event.preventDefault();\n\n    const newContact = { name, number};\n    \n    const checkedNumber=contacts.find(contact => contact.number === number);\n    \n    if(contacts.some(contact=>contact.name===name)){\n      return alert(`Contact with name \"${name}\" is already in contacts`);\n    } else if(checkedNumber){\n      return alert(\n        `Contact with number ${checkedNumber.number} is already in  ${checkedNumber.name}`\n      );\n    }\n    else{\n      dispatch(addContact(newContact))\n    }\n  setName('')\n  setNumber('')\n  }\n  \n  \n  const handleNameChange = event => {\n    setName(event.currentTarget.value);\n  };\n  const handleNumberChange = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleNameChange}\n            />\n          </Label>\n    \n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleNumberChange}\n            />\n          </Label>\n    \n          <BtnAdd type=\"submit\">Add contact</BtnAdd>\n        </Form>\n      );\n}","import styled from 'styled-components';\nexport const BtnDelete = styled.button`\n  margin-left: 10px;\n  width: fit-content;\n  height: auto;\n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 4px;\n  padding: 3px;\n  :hover,\n  :focus {\n    background-color: blue;\n  }\n`;\nexport const Item = styled.li`\n  margin-bottom: 10px;\n  /* display: flex;\n  justify-content: space-between; */\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\"\nimport {deleteContact} from\"../../redux/contacts/operations\"\nimport { Item, BtnDelete } from \"./ContactItem.styled\"\n\nexport const ContactItem=({contact: {name, number, id}})=>{\n    const dispatch=useDispatch()\n    const handleDelete = () => dispatch(deleteContact(id));\n    return(\n        <>\n      <Item >\n        {name}: {number}\n        <BtnDelete type=\"button\" onClick={handleDelete}>\n          Delete\n        </BtnDelete>\n      </Item>\n    </>\n    )\n}\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};","import styled from 'styled-components';\nexport const List = styled.ul`\n  width: fit-content;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: initial;\n`;","import { useSelector } from 'react-redux';\n\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList=()=>{\n\n\n    const visibleContacts=useSelector(selectVisibleContacts)\n    \n    return(\n        <List>\n      {visibleContacts.map(contact=>(\n        <ContactItem key={contact.id} contact={contact}/>\n      ))\n      }\n    </List>\n    )\n}","import PropTypes from 'prop-types';\n\nexport const Error = ({ children }) => {\n    return <p>{children}</p>;\n  };\n\n  Error.propTypes = {\n    children: PropTypes.object.isRequired,\n    }","import { useDispatch, useSelector } from \"react-redux\"\nimport { setFilter } from \"redux/contacts/filtersSlice\"\n\nimport { selectFilter } from \"redux/contacts/selectors\"\n\nexport const Filter=()=>{\n    const dispatch=useDispatch()\n    const filter=useSelector(selectFilter)\n    \n    return(<>\n    \n      <p>Find contacts by name</p>\n    <input type=\"text\" \n    name=\"filter\"\n    value={filter}\n    onChange={event=> dispatch(setFilter(event.target.value))} \n    />\n    </>)\n}","import GridLoader from \"react-spinners/GridLoader\";\nexport const Loader =({isLoading})=>{\n    return(<GridLoader\n        color=\"#36d7b7\"\n        cssOverride={{}}\n        loading={isLoading}\n        margin={2}\n        size={13}\n        width={15}\n      />)\n}","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { Error } from 'components/Error/Error';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\n\n\nexport default function Contacts  ()  {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n  \n    \n  \n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n  \n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm/>\n        <h2>Contacts</h2>\n        {error && <Error>{error}</Error>}\n        {contacts.length > 0 && (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n        {!isLoading && contacts.length === 0 && <p>There is no contacts</p>}\n        <Loader isLoading={isLoading} />\n      </>\n    );\n  };"],"names":["Form","styled","Label","Input","BtnAdd","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","newContact","checkedNumber","find","some","alert","addContact","type","value","pattern","title","required","onChange","currentTarget","BtnDelete","Item","ContactItem","id","onClick","deleteContact","List","ContactList","visibleContacts","map","Error","children","Filter","setFilter","target","Loader","color","cssOverride","loading","margin","size","width","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}